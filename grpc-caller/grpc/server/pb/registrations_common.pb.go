// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.28.2
// source: registrations_common.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type System int32

const (
	System_SystemUndefined System = 0
	System_eupassagem      System = 1
	System_ecommerce       System = 2
	System_app_eucatur     System = 3
	System_marketplace     System = 4
	System_app_eumais      System = 5
	System_portais         System = 6
	System_sge             System = 7
	System_embarcado       System = 8
)

// Enum value maps for System.
var (
	System_name = map[int32]string{
		0: "SystemUndefined",
		1: "eupassagem",
		2: "ecommerce",
		3: "app_eucatur",
		4: "marketplace",
		5: "app_eumais",
		6: "portais",
		7: "sge",
		8: "embarcado",
	}
	System_value = map[string]int32{
		"SystemUndefined": 0,
		"eupassagem":      1,
		"ecommerce":       2,
		"app_eucatur":     3,
		"marketplace":     4,
		"app_eumais":      5,
		"portais":         6,
		"sge":             7,
		"embarcado":       8,
	}
)

func (x System) Enum() *System {
	p := new(System)
	*p = x
	return p
}

func (x System) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (System) Descriptor() protoreflect.EnumDescriptor {
	return file_registrations_common_proto_enumTypes[0].Descriptor()
}

func (System) Type() protoreflect.EnumType {
	return &file_registrations_common_proto_enumTypes[0]
}

func (x System) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use System.Descriptor instead.
func (System) EnumDescriptor() ([]byte, []int) {
	return file_registrations_common_proto_rawDescGZIP(), []int{0}
}

type DocumentType int32

const (
	DocumentType_RG         DocumentType = 0
	DocumentType_CTPS       DocumentType = 1
	DocumentType_PASSAPORTE DocumentType = 2
	DocumentType_CNH        DocumentType = 3
	DocumentType_OUTRO      DocumentType = -1
)

// Enum value maps for DocumentType.
var (
	DocumentType_name = map[int32]string{
		0:  "RG",
		1:  "CTPS",
		2:  "PASSAPORTE",
		3:  "CNH",
		-1: "OUTRO",
	}
	DocumentType_value = map[string]int32{
		"RG":         0,
		"CTPS":       1,
		"PASSAPORTE": 2,
		"CNH":        3,
		"OUTRO":      -1,
	}
)

func (x DocumentType) Enum() *DocumentType {
	p := new(DocumentType)
	*p = x
	return p
}

func (x DocumentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DocumentType) Descriptor() protoreflect.EnumDescriptor {
	return file_registrations_common_proto_enumTypes[1].Descriptor()
}

func (DocumentType) Type() protoreflect.EnumType {
	return &file_registrations_common_proto_enumTypes[1]
}

func (x DocumentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DocumentType.Descriptor instead.
func (DocumentType) EnumDescriptor() ([]byte, []int) {
	return file_registrations_common_proto_rawDescGZIP(), []int{1}
}

type Jurisdiction int32

const (
	Jurisdiction_JurisdictionUndefined Jurisdiction = 0
	Jurisdiction_Federal               Jurisdiction = 1
	Jurisdiction_State                 Jurisdiction = 2
)

// Enum value maps for Jurisdiction.
var (
	Jurisdiction_name = map[int32]string{
		0: "JurisdictionUndefined",
		1: "Federal",
		2: "State",
	}
	Jurisdiction_value = map[string]int32{
		"JurisdictionUndefined": 0,
		"Federal":               1,
		"State":                 2,
	}
)

func (x Jurisdiction) Enum() *Jurisdiction {
	p := new(Jurisdiction)
	*p = x
	return p
}

func (x Jurisdiction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Jurisdiction) Descriptor() protoreflect.EnumDescriptor {
	return file_registrations_common_proto_enumTypes[2].Descriptor()
}

func (Jurisdiction) Type() protoreflect.EnumType {
	return &file_registrations_common_proto_enumTypes[2]
}

func (x Jurisdiction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Jurisdiction.Descriptor instead.
func (Jurisdiction) EnumDescriptor() ([]byte, []int) {
	return file_registrations_common_proto_rawDescGZIP(), []int{2}
}

// https://bitbucket.org/eucatur/workspace/snippets/nEqgo9/enum-ticket-type
type TypeOfTicket int32

const (
	TypeOfTicket_TypeOfTicketUndefined TypeOfTicket = 0
	TypeOfTicket_Internet              TypeOfTicket = 15
	TypeOfTicket_Deficient             TypeOfTicket = 6
	TypeOfTicket_Elderly               TypeOfTicket = 11
	TypeOfTicket_PartialElderly        TypeOfTicket = 998
	TypeOfTicket_Young                 TypeOfTicket = 10
	TypeOfTicket_PartialYoung          TypeOfTicket = 999
	TypeOfTicket_BestAge               TypeOfTicket = 997
)

// Enum value maps for TypeOfTicket.
var (
	TypeOfTicket_name = map[int32]string{
		0:   "TypeOfTicketUndefined",
		15:  "Internet",
		6:   "Deficient",
		11:  "Elderly",
		998: "PartialElderly",
		10:  "Young",
		999: "PartialYoung",
		997: "BestAge",
	}
	TypeOfTicket_value = map[string]int32{
		"TypeOfTicketUndefined": 0,
		"Internet":              15,
		"Deficient":             6,
		"Elderly":               11,
		"PartialElderly":        998,
		"Young":                 10,
		"PartialYoung":          999,
		"BestAge":               997,
	}
)

func (x TypeOfTicket) Enum() *TypeOfTicket {
	p := new(TypeOfTicket)
	*p = x
	return p
}

func (x TypeOfTicket) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TypeOfTicket) Descriptor() protoreflect.EnumDescriptor {
	return file_registrations_common_proto_enumTypes[3].Descriptor()
}

func (TypeOfTicket) Type() protoreflect.EnumType {
	return &file_registrations_common_proto_enumTypes[3]
}

func (x TypeOfTicket) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TypeOfTicket.Descriptor instead.
func (TypeOfTicket) EnumDescriptor() ([]byte, []int) {
	return file_registrations_common_proto_rawDescGZIP(), []int{3}
}

type StatusType int32

const (
	StatusType_StatusTypeUndefined StatusType = 0
	StatusType_Unverified          StatusType = 1
	StatusType_Pending             StatusType = 2
	StatusType_Confirmed           StatusType = 3
	StatusType_Approved            StatusType = 4
	StatusType_Refused             StatusType = 5
	StatusType_Review              StatusType = 6
	StatusType_Disapproved         StatusType = 7
	StatusType_Created             StatusType = 8
	StatusType_Unprocessed         StatusType = 9
	StatusType_Found               StatusType = 10
	StatusType_Captured            StatusType = 11
	StatusType_Processing          StatusType = 12
	StatusType_Authorized          StatusType = 13
	StatusType_Ok                  StatusType = 14
	StatusType_Error               StatusType = 15
	StatusType_Canceled            StatusType = 16
	StatusType_Refunded            StatusType = 17
	StatusType_Abandoned           StatusType = 18
	StatusType_Unauthorized        StatusType = 19
	StatusType_Chargeback          StatusType = 20
	StatusType_Locked              StatusType = 21
	StatusType_Normal              StatusType = 22
	StatusType_Void                StatusType = 23
	StatusType_Ignored             StatusType = 24
	StatusType_Expired             StatusType = 25
	StatusType_Duplicated          StatusType = 26
	StatusType_Retry               StatusType = 27
	StatusType_Disabled            StatusType = 28
)

// Enum value maps for StatusType.
var (
	StatusType_name = map[int32]string{
		0:  "StatusTypeUndefined",
		1:  "Unverified",
		2:  "Pending",
		3:  "Confirmed",
		4:  "Approved",
		5:  "Refused",
		6:  "Review",
		7:  "Disapproved",
		8:  "Created",
		9:  "Unprocessed",
		10: "Found",
		11: "Captured",
		12: "Processing",
		13: "Authorized",
		14: "Ok",
		15: "Error",
		16: "Canceled",
		17: "Refunded",
		18: "Abandoned",
		19: "Unauthorized",
		20: "Chargeback",
		21: "Locked",
		22: "Normal",
		23: "Void",
		24: "Ignored",
		25: "Expired",
		26: "Duplicated",
		27: "Retry",
		28: "Disabled",
	}
	StatusType_value = map[string]int32{
		"StatusTypeUndefined": 0,
		"Unverified":          1,
		"Pending":             2,
		"Confirmed":           3,
		"Approved":            4,
		"Refused":             5,
		"Review":              6,
		"Disapproved":         7,
		"Created":             8,
		"Unprocessed":         9,
		"Found":               10,
		"Captured":            11,
		"Processing":          12,
		"Authorized":          13,
		"Ok":                  14,
		"Error":               15,
		"Canceled":            16,
		"Refunded":            17,
		"Abandoned":           18,
		"Unauthorized":        19,
		"Chargeback":          20,
		"Locked":              21,
		"Normal":              22,
		"Void":                23,
		"Ignored":             24,
		"Expired":             25,
		"Duplicated":          26,
		"Retry":               27,
		"Disabled":            28,
	}
)

func (x StatusType) Enum() *StatusType {
	p := new(StatusType)
	*p = x
	return p
}

func (x StatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_registrations_common_proto_enumTypes[4].Descriptor()
}

func (StatusType) Type() protoreflect.EnumType {
	return &file_registrations_common_proto_enumTypes[4]
}

func (x StatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusType.Descriptor instead.
func (StatusType) EnumDescriptor() ([]byte, []int) {
	return file_registrations_common_proto_rawDescGZIP(), []int{4}
}

type PersonPassType int32

const (
	PersonPassType_PersonPassUndefined  PersonPassType = 0
	PersonPassType_PersonPassNormal     PersonPassType = 1
	PersonPassType_PersonWithDisability PersonPassType = 2 // https://www.ungeneva.org/sites/default/files/2021-01/Disability-Inclusive-Language-Guidelines.pdf
	PersonPassType_TaxAuditorAgent      PersonPassType = 3
)

// Enum value maps for PersonPassType.
var (
	PersonPassType_name = map[int32]string{
		0: "PersonPassUndefined",
		1: "PersonPassNormal",
		2: "PersonWithDisability",
		3: "TaxAuditorAgent",
	}
	PersonPassType_value = map[string]int32{
		"PersonPassUndefined":  0,
		"PersonPassNormal":     1,
		"PersonWithDisability": 2,
		"TaxAuditorAgent":      3,
	}
)

func (x PersonPassType) Enum() *PersonPassType {
	p := new(PersonPassType)
	*p = x
	return p
}

func (x PersonPassType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PersonPassType) Descriptor() protoreflect.EnumDescriptor {
	return file_registrations_common_proto_enumTypes[5].Descriptor()
}

func (PersonPassType) Type() protoreflect.EnumType {
	return &file_registrations_common_proto_enumTypes[5]
}

func (x PersonPassType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PersonPassType.Descriptor instead.
func (PersonPassType) EnumDescriptor() ([]byte, []int) {
	return file_registrations_common_proto_rawDescGZIP(), []int{5}
}

var File_registrations_common_proto protoreflect.FileDescriptor

var file_registrations_common_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2a,
	0x93, 0x01, 0x0a, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x65, 0x75, 0x70, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x6d, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x10, 0x02, 0x12, 0x0f,
	0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x65, 0x75, 0x63, 0x61, 0x74, 0x75, 0x72, 0x10, 0x03, 0x12,
	0x0f, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x10, 0x04,
	0x12, 0x0e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f, 0x65, 0x75, 0x6d, 0x61, 0x69, 0x73, 0x10, 0x05,
	0x12, 0x0b, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x69, 0x73, 0x10, 0x06, 0x12, 0x07, 0x0a,
	0x03, 0x73, 0x67, 0x65, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x65, 0x6d, 0x62, 0x61, 0x72, 0x63,
	0x61, 0x64, 0x6f, 0x10, 0x08, 0x2a, 0x4d, 0x0a, 0x0c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x52, 0x47, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x43, 0x54, 0x50, 0x53, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x41, 0x53, 0x53, 0x41,
	0x50, 0x4f, 0x52, 0x54, 0x45, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x4e, 0x48, 0x10, 0x03,
	0x12, 0x12, 0x0a, 0x05, 0x4f, 0x55, 0x54, 0x52, 0x4f, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0x01, 0x2a, 0x41, 0x0a, 0x0c, 0x4a, 0x75, 0x72, 0x69, 0x73, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x15, 0x4a, 0x75, 0x72, 0x69, 0x73, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x02, 0x2a, 0x94, 0x01, 0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65,
	0x4f, 0x66, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x79, 0x70, 0x65,
	0x4f, 0x66, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x10,
	0x0f, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x65, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x10, 0x06,
	0x12, 0x0b, 0x0a, 0x07, 0x45, 0x6c, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x10, 0x0b, 0x12, 0x13, 0x0a,
	0x0e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x45, 0x6c, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x10,
	0xe6, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x10, 0x0a, 0x12, 0x11, 0x0a,
	0x0c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x59, 0x6f, 0x75, 0x6e, 0x67, 0x10, 0xe7, 0x07,
	0x12, 0x0c, 0x0a, 0x07, 0x42, 0x65, 0x73, 0x74, 0x41, 0x67, 0x65, 0x10, 0xe5, 0x07, 0x2a, 0xa5,
	0x03, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a,
	0x13, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x6e, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64,
	0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x04,
	0x12, 0x0b, 0x0a, 0x07, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x64, 0x10, 0x05, 0x12, 0x0a, 0x0a,
	0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x69, 0x73,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x6e, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x10, 0x09, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x64, 0x10,
	0x0b, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x10,
	0x0c, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x10,
	0x0d, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x6b, 0x10, 0x0e, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x0f, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64,
	0x10, 0x10, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x10, 0x11,
	0x12, 0x0d, 0x0a, 0x09, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x64, 0x10, 0x12, 0x12,
	0x10, 0x0a, 0x0c, 0x55, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x10,
	0x13, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x10,
	0x14, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x10, 0x15, 0x12, 0x0a, 0x0a,
	0x06, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x16, 0x12, 0x08, 0x0a, 0x04, 0x56, 0x6f, 0x69,
	0x64, 0x10, 0x17, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x10, 0x18,
	0x12, 0x0b, 0x0a, 0x07, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x10, 0x19, 0x12, 0x0e, 0x0a,
	0x0a, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x10, 0x1a, 0x12, 0x09, 0x0a,
	0x05, 0x52, 0x65, 0x74, 0x72, 0x79, 0x10, 0x1b, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x10, 0x1c, 0x2a, 0x6e, 0x0a, 0x0e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x50, 0x61, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x4e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x69, 0x73, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x10,
	0x02, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x61, 0x78, 0x41, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x10, 0x03, 0x42, 0x3a, 0x5a, 0x38, 0x62, 0x69, 0x74, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x65, 0x75, 0x63, 0x61, 0x74, 0x75, 0x72, 0x2f,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_registrations_common_proto_rawDescOnce sync.Once
	file_registrations_common_proto_rawDescData = file_registrations_common_proto_rawDesc
)

func file_registrations_common_proto_rawDescGZIP() []byte {
	file_registrations_common_proto_rawDescOnce.Do(func() {
		file_registrations_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_registrations_common_proto_rawDescData)
	})
	return file_registrations_common_proto_rawDescData
}

var file_registrations_common_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_registrations_common_proto_goTypes = []interface{}{
	(System)(0),         // 0: microservice.registrations.common.System
	(DocumentType)(0),   // 1: microservice.registrations.common.DocumentType
	(Jurisdiction)(0),   // 2: microservice.registrations.common.Jurisdiction
	(TypeOfTicket)(0),   // 3: microservice.registrations.common.TypeOfTicket
	(StatusType)(0),     // 4: microservice.registrations.common.StatusType
	(PersonPassType)(0), // 5: microservice.registrations.common.PersonPassType
}
var file_registrations_common_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_registrations_common_proto_init() }
func file_registrations_common_proto_init() {
	if File_registrations_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_registrations_common_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_registrations_common_proto_goTypes,
		DependencyIndexes: file_registrations_common_proto_depIdxs,
		EnumInfos:         file_registrations_common_proto_enumTypes,
	}.Build()
	File_registrations_common_proto = out.File
	file_registrations_common_proto_rawDesc = nil
	file_registrations_common_proto_goTypes = nil
	file_registrations_common_proto_depIdxs = nil
}
